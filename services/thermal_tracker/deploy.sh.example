#!/bin/bash

# Thermal Tracker Service Deployment Script (Example Template)
# Copy this to deploy.sh and update with your Pi's IP address and password
#
# This script will:
# - Install smbus if not already installed
# - Enable I2C interface
# - Add user to i2c and gpio groups
# - Deploy the thermal_tracker service
# - Enable and start the service

PI_HOST="sshpi@192.168.1.100"  # Update with your Pi's IP
PI_PASSWORD="your-password-here"  # Update with your Pi's password
PI_DEST="/boot/Pi_Eyes"

echo "Deploying Thermal Tracker service to $PI_HOST..."

# Copy files to home directory first
echo "Copying thermal_tracker.py..."
sshpass -p "$PI_PASSWORD" scp ./thermal_tracker.py "$PI_HOST:thermal_tracker.py"

echo "Copying amg8833_simple.py..."
sshpass -p "$PI_PASSWORD" scp ./amg8833_simple.py "$PI_HOST:amg8833_simple.py"

echo "Copying test_thermal_tracker.py..."
sshpass -p "$PI_PASSWORD" scp ./test_thermal_tracker.py "$PI_HOST:test_thermal_tracker.py"

echo "Copying thermal_tracker.service..."
sshpass -p "$PI_PASSWORD" scp ./thermal_tracker.service "$PI_HOST:thermal_tracker.service"

echo "Copying config file..."
if [ -f ./config.ini ]; then
    sshpass -p "$PI_PASSWORD" scp ./config.ini "$PI_HOST:thermal_tracker_config.ini"
    echo "Config file found and copied"
else
    echo "Warning: config.ini not found, using example"
    sshpass -p "$PI_PASSWORD" scp ./config.ini.example "$PI_HOST:thermal_tracker_config.ini"
fi

# Install dependencies and set up service
echo "Installing dependencies and service on Pi..."
sshpass -p "$PI_PASSWORD" ssh "$PI_HOST" << 'EOF'
    # Install smbus if not already installed
    if ! python3 -c "import smbus" 2>/dev/null; then
        echo "Installing python3-smbus..."
        sudo apt-get update
        sudo apt-get install -y python3-smbus
    else
        echo "python3-smbus already installed"
    fi

    # Enable I2C interface if not already enabled
    if ! sudo raspi-config nonint get_i2c | grep -q 0; then
        echo "Enabling I2C interface..."
        sudo raspi-config nonint do_i2c 0
    else
        echo "I2C interface already enabled"
    fi

    # Add user to i2c and gpio groups
    echo "Adding user to i2c and gpio groups..."
    sudo usermod -a -G i2c,gpio sshpi

    # Move Python scripts to destination
    sudo mv /home/sshpi/thermal_tracker.py /boot/Pi_Eyes/thermal_tracker.py
    sudo chmod +x /boot/Pi_Eyes/thermal_tracker.py

    sudo mv /home/sshpi/amg8833_simple.py /boot/Pi_Eyes/amg8833_simple.py
    sudo chmod +x /boot/Pi_Eyes/amg8833_simple.py

    sudo mv /home/sshpi/test_thermal_tracker.py /boot/Pi_Eyes/test_thermal_tracker.py
    sudo chmod +x /boot/Pi_Eyes/test_thermal_tracker.py

    # Move config file to destination
    if [ -f /home/sshpi/thermal_tracker_config.ini ]; then
        sudo mv /home/sshpi/thermal_tracker_config.ini /boot/Pi_Eyes/thermal_tracker_config.ini
        sudo chmod 644 /boot/Pi_Eyes/thermal_tracker_config.ini
        echo "Config file deployed to /boot/Pi_Eyes/thermal_tracker_config.ini"
    fi

    # Install systemd service
    sudo mv /home/sshpi/thermal_tracker.service /etc/systemd/system/thermal_tracker.service
    sudo chmod 644 /etc/systemd/system/thermal_tracker.service

    # Reload systemd and restart service
    sudo systemctl daemon-reload

    if systemctl is-enabled thermal_tracker.service >/dev/null 2>&1; then
        echo "Restarting thermal_tracker service..."
        sudo systemctl restart thermal_tracker.service
    else
        echo "Enabling and starting thermal_tracker service..."
        sudo systemctl enable thermal_tracker.service
        sudo systemctl start thermal_tracker.service
    fi

    sleep 1
    sudo systemctl status thermal_tracker.service --no-pager
EOF

echo ""
echo "=========================================="
echo "Deployment complete!"
echo "=========================================="
echo ""
echo "Service Management:"
echo "  Enable on boot:  ssh $PI_HOST 'sudo systemctl enable thermal_tracker.service'"
echo "  Check status:    ssh $PI_HOST 'sudo systemctl status thermal_tracker.service'"
echo "  View logs:       ssh $PI_HOST 'sudo journalctl -u thermal_tracker.service -f'"
echo ""
echo "Testing:"
echo "  python3 test_thermal_tracker.py --test-service"
echo "  python3 test_thermal_tracker.py --live-display"
echo "  python3 test_thermal_tracker.py --calibrate"
echo ""
echo "Note: You may need to log out and back in for group membership changes to take effect."
